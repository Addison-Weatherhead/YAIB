import gin.torch.external_configurables
import icu_benchmarks.models.wrappers
import icu_benchmarks.models.encoders
import icu_benchmarks.models.utils

RES = 1
RES_LAB = 1

preprocess.use_features = True

# Train params
train_common.model = @MLWrapper()
train_common.do_test = True

MLWrapper.model = @LGBMClassifier()
MLWrapper.train.patience = 10

random_search.depth = [3, 4, 5, 6, 7]
LGBMClassifier.max_depth = %DEPTH
LGBMClassifier.num_leaves = 16
LGBMClassifier.n_estimators = 100000
LGBMClassifier.min_child_samples = 1000
random_search.subsample_data = [0.33, 0.66, 1.00]
LGBMClassifier.subsample = %SUBSAMPLE_DATA
LGBMClassifier.subsample_freq = 1
random_search.subsample_freq = [0.33, 0.66, 1.00]
LGBMClassifier.colsample_bytree = %SUBSAMPLE_FREQ
