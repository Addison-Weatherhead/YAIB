import gin.torch.external_configurables
import icu_benchmarks.models.wrappers
import icu_benchmarks.models.encoders
import icu_benchmarks.models.utils

preprocess.use_features = True

# Train params
train_common.model = @MLWrapper()

MLWrapper.model = @LGBMClassifier()
MLWrapper.train.patience = 10

model/hyperparameter.class_to_tune = @LGBMClassifier
model/hyperparameter.cast_to_int = ["max_depth", "num_leaves", "depth"]
model/hyperparameter.colsample_bytree = (0.33, 1.0)
model/hyperparameter.max_depth = (3, 7)
model/hyperparameter.min_child_samples = 1000
model/hyperparameter.n_estimators = 100000
model/hyperparameter.num_leaves = (8, 128)
model/hyperparameter.subsample = (0.33, 1.0)
model/hyperparameter.subsample_freq = 1

tune_hyperparameters.scopes = ["model"]
tune_hyperparameters.init_points = 10
tune_hyperparameters.n_iter = 250
tune_hyperparameters.folds_to_tune_on = 3
